% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predictive_JM.R
\name{predictive_JM}
\alias{predictive_JM}
\title{Predictive Performance Assessment for Joint Models}
\usage{
predictive_JM(jointFit,data,method,formulas,random_effect_formulas,form_splines,surv_formula,seq_len,w,n,K,seed,r)
}
\arguments{
\item{jointFit}{A fitted joint model object from the `jm` function}

\item{data}{A data.frame containing the longitudinal and survival data}

\item{method}{Character string specifying validation method: "split", "K-fold", or "boot"}

\item{formulas}{A list of functional forms for fixed effects of longitudinal submodel.}

\item{random_effect_formulas}{A list of functional forms for random effects of longitudinal submodel.}

\item{form_splines}{A list of functional forms for the dynamic effects of longitudinal covariatesï¼Œwith default NULL.}

\item{surv_formula}{Functional form of the survival submodel.}

\item{seq_len}{Numeric vector of time points for prediction evaluation}

\item{w}{prediction window}

\item{n}{Number of repetitions for internal cross-validation. For random splitting, it refers to the number of random splitting iterations; for K-fold cross-validation, it refers to the number of outer loop iterations; for bootstrap, it refers to the number of resampling iterations.}

\item{K}{Integer, number of folds for K-fold cross-validation (only used when method="K-fold")}

\item{seed}{The seed number for sampling.}

\item{r}{Numeric, proportion of data to use for training (only used when method="split")}

\item{n_group}{number of groups (or points) for the calibration curve.Default is 10.}
}
\value{
A list containing:
\itemize{
  \item{time: The sequence of time points used for evaluation}
  \item{cindex_corr: Corrected concordance index with confidence intervals}
  \item{BS_corr: Corrected Brier score with confidence intervals}
  \item{AUC_corr: Corrected AUC with confidence intervals}
  \item{calibration_slpoe_with_ci: Calibration slope with confidence intervals}
  \item{all_cal_autual: Complete calibration results}
}
}
\description{
This function evaluates the predictive performance of joint models using
different validation methods including data splitting, K-fold cross-validation,
and bootstrap validation.
}
\examples{
library(JMbayes2)
library(DynamicModel)
data(renal)
renal.id<-renal[!duplicated(renal$id),]
fit1<-lme(GFR~age+weight+ns(yearse,3), random =~yearse | id,data = renal,control = list(opt = "optim"))
fit2<-lme(proteinuria~age+ns(yearse,3), random = ~yearse | id,  data =renal,control = list(opt = "optim"))
cox<-coxph(Surv(time,status)~age+sex+weight,data=renal.id,x=TRUE)
form_splines <- list("GFR"=~ value(GFR)* (yearse +I(yearse^2)),
"proteinuria"=~ value(proteinuria) * (yearse+I(yearse^2)))
jointFit1 <- jm(cox, list(fit1,fit2), time_var = "yearse",seed=1,n_chains = 1L, functional_forms = form_splines)
JM_pre<-predictive_JM(jointFit1,renal,method="K-fold",formulas=list(GFR~weight+age+ns(yearse,3),proteinuria~age+ns(yearse,3)),random_effect_formulas=list(~yearse|id,~yearse|id),surv_formula=Surv(time,status)~age+sex+weight,form_splines=form_splines,seq_len=seq(0,10,by=1),w=5,n=1,K=5,seed=1)
}
